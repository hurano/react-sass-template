//
// Mixins
// --------------------------------------------------



@mixin gradient-horizontal( $startColor: #555, $endColor: #333 ) {
    background-color: $endColor;
    background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
    background-image: linear-gradient(to right, $startColor, $endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=1); // IE9 and down
}
@mixin gradient-vertical( $startColor: #555, $endColor: #333 ) {
    background-color: mix($startColor, $endColor, 62.5%);
    background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
    background-image: linear-gradient(to bottom, $startColor, $endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down
}

@mixin box-shadow( $horizontal: 1, $vertical: 1, $blur: 1, $spread: 1, $color: rgba(0, 0, 0, 0.5) ){
    -webkit-box-shadow: $horizontal+px $vertical+px $blur+px $spread+px $color;
    -moz-box-shadow:    $horizontal+px $vertical+px $blur+px $spread+px $color;
    box-shadow:         $horizontal+px $vertical+px $blur+px $spread+px $color;
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
    border-bottom-left-radius: $radius;
    border-bottom-right-radius: $radius;
}

@mixin circle-box($width, $color){
    width: $width;
    height: $width;
    background: $color;
    -webkit-border-radius: $width/2;
    -moz-border-radius: $width/2;
    -ms-border-radius: $width/2;
    border-radius: 50%;
    border-top-left-radius: $width/2;
    border-top-right-radius: $width/2;
    border-bottom-left-radius: $width/2;
    border-bottom-right-radius: $width/2;

}

@mixin circle-line($width, $color, $border){
    background-color: transparent;
    border: $border solid $color;
    height: $width;
    width: $width;
    -webkit-border-radius: $width/2;
    -moz-border-radius: $width/2;
    -ms-border-radius: $width/2;
    border-radius: 50%;
    border-top-left-radius: $width/2;
    border-top-right-radius: $width/2;
    border-bottom-left-radius: $width/2;
    border-bottom-right-radius: $width/2;
}

@mixin transition($time, $property: all, $easing: ease-in) {
    transition: $property $time $easing;
}

@mixin breakpoint($point) {
    @if $point == desktop {
        @media (min-width: 641px) { @content; }
    }
    @else if $point == tablet-large {
        @media (max-width: 1024px) { @content; }
    }
    @else if $point == mobile {
        @media (max-width: 650px) { @content; }
    }
    @else{
        @media (max-width: $point) { @content; }
    }
}

// CSS3 KEYFRAME ANIMATION
// --------------------------------------------------

$default-prefixes: webkit moz ms o;

@mixin build-prefix-values($property, $value, $prefixes: $default-prefixes) {
    @each $prefix in $prefixes {
        -#{$prefix}-#{$property}: #{$value};
    }
    #{$property}: #{$value};
}

@mixin animation($name, $duration: 1s, $timingFunction: ease, $iteration: infinite) {
    $value: $name $duration $timingFunction $iteration;
    // use default prefixes
    @include build-prefix-values('animation', $value);
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @-moz-keyframes #{$name} {
        @content;
    }
    @-ms-keyframes #{$name} {
        @content;
    }
    @-o-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}